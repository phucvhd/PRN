@using BookManagementLib.BusinessObject
@model BookManagementLib.BusinessObject.Product

@{
    ViewData["Title"] = "Edit";
    Layout = "~/Views/Shared/_Layout"+TempData.Peek("role")+".cshtml";
}
@{
    IEnumerable<Category> categories = ViewData["categoryList"] as IEnumerable<Category>;
    IEnumerable<Age> ages = ViewData["forAgeList"] as IEnumerable<Age>;

}
<h1>Edit</h1>

<h4>Product</h4>
<hr />
<div>
    
    @Html.ActionLink("Export / Import", "Port", "Reports", new { productId = Model.ProductId }) 
</div>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="ProductId" class="control-label"></label>
                <input asp-for="ProductId" class="form-control" readonly />
                <span asp-validation-for="ProductId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Isbn10" class="control-label"></label>
                <input asp-for="Isbn10" class="form-control" id="isbn10"/>
                <span asp-validation-for="Isbn10" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Isbn13" class="control-label"></label>
                <input asp-for="Isbn13" class="form-control" id="isbn13"/>
                <span asp-validation-for="Isbn13" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ProductName" class="control-label"></label>
                <input asp-for="ProductName" class="form-control" />
                <span asp-validation-for="ProductName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CategoryId" class="control-label"></label>
                <select asp-for="CategoryId" asp-items="@(new SelectList(categories,"CategoryId","CategoryName", Model.CategoryId))" class="form-control">

                    <option>--- Select one ---</option>
                </select>
                <span asp-validation-for="CategoryId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Price" class="control-label"></label>
                <input asp-for="Price" class="form-control" />
                <span asp-validation-for="Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" readonly />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Author" class="control-label"></label>
                <input asp-for="Author" class="form-control" />
                <span asp-validation-for="Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Publisher" class="control-label"></label>
                <input asp-for="Publisher" class="form-control" />
                <span asp-validation-for="Publisher" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input type="file" id="file" onchange="loadBase64()" />
                <img src="@Model.Image"/>
                <input asp-for="Image" id="img-string" class="form-control" type="hidden" value="@Model.Image"/>
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>
            <script>
                function loadBase64() {
                    var file = document.getElementById("file").files[0];
                    getBase64(file); // prints the base64 string
                }

                function getBase64(file) {
                    var reader = new FileReader();
                    reader.readAsDataURL(file);
                    reader.onload = function () {
                        document.getElementById("img-string").value = reader.result;
                        console.log(document.getElementById("img-string").value);
                    };
                    reader.onerror = function (error) {
                        console.log('Error: ', error);
                    };
                }


            </script>
            <div class="form-group">
                <label asp-for="ForAgesId" class="control-label"></label>
                <select asp-for="ForAgesId" asp-items="@(new SelectList(ages,"ForAgesId","Description", Model.ForAgesId))" class="form-control">
                    <option>--- Select one ---</option>
                </select>
                <span asp-validation-for="ForAgesId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreatedDate" class="control-label"></label>
                <input asp-for="CreatedDate" class="form-control" readonly />
                <span asp-validation-for="CreatedDate" class="text-danger"></span>
            </div>
            <!--
            <div class="form-group">
                <label asp-for="LastModified" class="control-label"></label>
                <input asp-for="LastModified" class="form-control" />
                <span asp-validation-for="LastModified" class="text-danger"></span>
            </div>

    -->
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" onclick="return validate()"/>
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
@{
    if (ViewBag.Message != null)
    {
        <script>
        window.onload = function () { alert("@ViewBag.Message") }
        </script>
    }
}
<!--
    
<script>
    function validate() {
        var x = document.getElementById('port').value
        if (!Number.isInteger(x)) {
            alert('Export/Import is integer number')
            console.log('Export/Import is integer number')
            document.getElementById('port-message').innerHTML = "Integer only"
            return false
        }
        @ViewBag.Port=x
        return true
    }
</script>
-->
<script>
    function validate() {
        var isbn10 = document.getElementById('isbn10').value.trim()
        var isbn13 = document.getElementById('isbn13').value.trim()

        if (isbn10 == null || isbn10 == "") {
            alert("ISBN is Empty")
            return false
        }
        if (isbn13 == null || isbn13 == "") {
            alert("ISBN is Empty")
            return false
        }
        return true
    }
</script>