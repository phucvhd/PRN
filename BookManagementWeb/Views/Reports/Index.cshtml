@model IEnumerable<BookManagementLib.BusinessObject.Report>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout"+TempData.Peek("role")+".cshtml";
    var dashboardStatistic = ViewData["DashboardStatistic"] as Tuple<int, int>;
    DateTime datetime = new DateTime();
}
<link rel="stylesheet" href="~/css/views.css" />
<h1>Reports</h1>

<div style="font-size: 1.5em; text-align: center;"><b>Dashboard statistic</b><br /></div>
<table class="table">
    <tr style="text-align: center;">
        <th>This Month Import</th>
        <th>This Month Export</th>
    </tr>
    <tr style="text-align: center;">
        <td class="text-success">@dashboardStatistic.Item1</td>
        <td class="text-danger">@dashboardStatistic.Item2</td>


    </tr>
</table>

@using (Html.BeginForm())
{
    <p>
        Filter by Created Date: @Html.EditorFor(d => datetime, "FilterDate")
        <button class="btn-outline-light">@Html.ActionLink("Clear", "Index", "Reports", new { datetime = "01/01/2000" }, new { @style = "text-decoration:none; color:black" })</button>

        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.ActionLink("Id", "Index", new { sortOrder = ViewBag.IdSortParm })
            </th>
            <th>
                @Html.ActionLink("Company", "Index", new { sortOrder = ViewBag.CidSortParm })
            </th>
            <th>
                @Html.ActionLink("Product", "Index", new { sortOrder = ViewBag.PidSortParm })
            </th>
            <th id="number">
                @Html.DisplayNameFor(model => model.Quantity)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsSupplier)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsReceiver)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserEmail)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CompanyId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ProductId)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Quantity)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsSupplier)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsReceiver)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CreatedDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserEmail)
                </td>
                <td>

                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                    @if ((int)TempData.Peek("role") == 2)
                    {
                        <p>@Html.ActionLink("Delete", "Delete", new { id = item.Id })</p>
                    }



                </td>
            </tr>
        }
    </tbody>
</table>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(ViewBag.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @ViewBag.PreDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(ViewBag.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @ViewBag.NextDisabled">
    Next
</a>
@{
    if (ViewBag.Notify != null)
    {
        <script>
        window.onload = function () { alert("@ViewBag.Notify") }
        </script>
    }
}